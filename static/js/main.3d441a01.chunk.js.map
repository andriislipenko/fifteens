{"version":3,"sources":["fifteens/dashboard/cell/Cell.module.scss","fifteens/dashboard/Dashboard.module.scss","fifteens/Fifteens.module.scss","App.module.scss","fifteens/dashboard/cell/Cell.tsx","fifteens/dashboard/Dashboard.tsx","fifteens/newGameButton/NewGameButton.tsx","fifteens/Fifteens.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Cell","containerClassNames","styles","container","this","props","number","emplty","gridPosition","y","x","className","style","onMouseDown","e","onClick","React","Component","Dashboard","FINAL_STATE","createFinalState","cells","onCellClicked","bind","state","cellsState","createRandomCellsState","shouldStartNewGame","setState","onGameStarts","isGameProceeds","checkCompleteness","onGameStoped","collectCells","dashboard","i","push","handleCellsState","clickedCellIndex","emptyCellIndex","length","clickedCell","emptyCell","prevX","prevY","nextX","nextY","isEmptyAround","slice","cellsStateDonor","randomIndex","Math","floor","random","splice","j","NewGameButton","onNewGame","Fifteens","onGameStarted","App","path","from","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d441a01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cell_container__2Hlr7\",\"number\":\"Cell_number__3PmW_\",\"emplty\":\"Cell_emplty__34REJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__3pmzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Fifteens_container__1Pfgo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\"};","import React, { CSSProperties } from 'react';\nimport styles from './Cell.module.scss';\n\nclass Cell extends React.Component<CellProps> {\n    public render(): JSX.Element {\n        const containerClassNames: string = `${styles.container} ${!this.props.number ? styles.emplty : ''}`;\n        const gridPosition: CSSProperties = {\n            'gridColumn': this.props.y,\n            'gridRow': this.props.x\n        };\n\n        return (\n            <div \n                className={containerClassNames}\n                style={gridPosition}\n                onMouseDown={(e) => this.props.onClick(this.props.number)}\n            >\n                <div className={styles.number}>{this.props.number}</div>\n            </div>\n        );\n    }\n}\n\ninterface CellProps {\n    number: number | null;\n    x: number;\n    y: number;\n    onClick: (number: number) => void;\n}\n\nexport default Cell;\n","import React from 'react';\nimport { CellState } from '../entities/CellState';\nimport Cell from './cell/Cell';\nimport styles from './Dashboard.module.scss';\n\nclass Dashboard extends React.Component<DashboardProps, DashboardState> {\n    private readonly FINAL_STATE: CellState[] = this.createFinalState();\n\n    private cells: JSX.Element[];\n\n    constructor(props: DashboardProps) {\n        super(props);\n\n        this.onCellClicked = this.onCellClicked.bind(this);\n\n        this.state = {\n            cellsState: this.createRandomCellsState()\n        }\n    }\n    \n    render(): JSX.Element {\n        if (this.props.shouldStartNewGame) {\n            this.setState({\n                cellsState: this.createRandomCellsState()\n            });\n            this.props.onGameStarts();\n        }\n\n        if (this.props.isGameProceeds && this.checkCompleteness()) {\n            this.props.onGameStoped();\n        }\n\n        this.cells = this.collectCells();\n\n        return (\n            <div className={styles.dashboard}>\n                {this.cells}\n            </div>\n        );\n    }\n\n    private collectCells(): JSX.Element[] {\n        let cells: JSX.Element[] = [];\n\n        let number;\n        for (let i = 0; i < 16; i++) {\n            number = i + 1 < 16 ? i + 1 : null;\n            \n            cells.push(\n                <Cell \n                    number={number}\n                    x={this.state.cellsState[i].x}\n                    y={this.state.cellsState[i].y}\n                    onClick={this.onCellClicked}\n                    key={i}\n                />\n            )\n        }\n\n        return cells;\n    }\n\n    private onCellClicked(number: number): void {\n        if (!number || !this.props.isGameProceeds) return;\n\n        this.handleCellsState(number);\n    }\n\n    private handleCellsState(number: number): void {\n        const clickedCellIndex: number = number - 1;\n        const emptyCellIndex: number = this.cells.length - 1;\n\n        const clickedCell: JSX.Element = this.cells[clickedCellIndex];\n        const emptyCell: JSX.Element = this.cells[emptyCellIndex];\n\n        let prevX: number = clickedCell.props.x;\n        let prevY: number = clickedCell.props.y;\n        let nextX: number = emptyCell.props.x;\n        let nextY: number = emptyCell.props.y;\n\n        if (!this.isEmptyAround(prevX, prevY, nextX, nextY)) return;\n\n        let cellsState: CellState[] = this.state.cellsState.slice();\n\n        cellsState[clickedCellIndex].x = nextX;\n        cellsState[clickedCellIndex].y = nextY;\n        cellsState[emptyCellIndex].x = prevX;\n        cellsState[emptyCellIndex].y = prevY;\n\n        this.setState({cellsState});\n    }\n\n    private isEmptyAround(prevX: number, prevY: number, nextX: number, nextY: number): boolean {\n        if (prevX === nextX) {\n            if (prevY - 1 === nextY || prevY + 1 === nextY) return true;\n        }\n\n        if (prevY === nextY) {\n            if(prevX - 1 === nextX || prevX + 1 === nextX) return true;\n        }\n\n        return false;\n    }\n\n    private checkCompleteness(): boolean {\n        for (let i = 0; i < this.FINAL_STATE.length; i++) {\n            const x = this.state.cellsState[i].x;\n            const y = this.state.cellsState[i].y;\n\n            if (x !== this.FINAL_STATE[i].x || y !== this.FINAL_STATE[i].y) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private createRandomCellsState(): CellState[] {\n        const cellsStateDonor: CellState[] = this.createFinalState();\n        let cellsState: CellState[] = [];\n\n        for(let i = 0; i < this.FINAL_STATE.length; i++) {\n            const randomIndex: number = Math.floor(Math.random() * cellsStateDonor.length);\n\n            cellsState.push(cellsStateDonor[randomIndex]);\n            cellsStateDonor.splice(randomIndex, 1);\n        }\n\n        return cellsState;\n    }\n\n    private createFinalState(): CellState[] {\n        let cellsState: CellState[] = [];\n\n        for (let i = 1; i <= 4; i++) {\n            for (let j = 1; j <= 4; j++) {\n                cellsState.push({\n                    x: i,\n                    y: j\n                });\n            }\n        }\n\n        return cellsState;\n    }\n}\n\ninterface DashboardProps {\n    isGameProceeds: boolean;\n    shouldStartNewGame: boolean;\n    onGameStarts: () => void;\n    onGameStoped: () => void;\n}\n\ninterface DashboardState {\n    cellsState: CellState[];\n}\n\nexport default Dashboard;\n","import React from 'react';\n\nclass NewGameButton extends React.Component<NewGameButtonProps> {\n    render(): JSX.Element {\n        return (\n            <button onClick={this.props.onNewGame}>\n                New game\n            </button>\n        );\n    }\n}\n\ninterface NewGameButtonProps {\n    onNewGame: () => void;\n}\n\nexport default NewGameButton;\n","import React from 'react';\nimport Dashboard from './dashboard/Dashboard';\nimport styles from './Fifteens.module.scss';\nimport NewGameButton from './newGameButton/NewGameButton';\n\nclass Fifteens extends React.Component<any, FifteensState> {\n    constructor(props: any) {\n        super(props);\n\n        this.onNewGame = this.onNewGame.bind(this);\n        this.onGameStarted = this.onGameStarted.bind(this);\n        this.onGameStoped = this.onGameStoped.bind(this);\n\n        this.state = {\n            shouldStartNewGame: true,\n            isGameProceeds: false\n        }\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div className={styles.container}>\n                <Dashboard \n                    isGameProceeds={this.state.isGameProceeds}\n                    shouldStartNewGame={this.state.shouldStartNewGame}\n                    onGameStarts={this.onGameStarted}\n                    onGameStoped={this.onGameStoped}\n                />\n                <NewGameButton onNewGame={this.onNewGame}/>\n            </div>\n        );\n    }\n\n    private onNewGame(): void {\n        this.setState({shouldStartNewGame: true});\n    }\n\n    private onGameStarted(): void {\n        this.setState({\n            isGameProceeds: true,\n            shouldStartNewGame: false\n        });\n    }\n\n    private onGameStoped(): void {\n        this.setState({isGameProceeds: false});\n    }\n}\n\ninterface FifteensState {\n    shouldStartNewGame: boolean;\n    isGameProceeds: boolean;\n}\n\nexport default Fifteens;\n","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport Fifteens from './fifteens/Fifteens';\nimport styles from './App.module.scss';\n\nexport class App extends React.Component {\n    public render(): JSX.Element { \n        return (\n            <div className={styles.container}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route path=\"/fifteens\">\n                            <Fifteens/>\n                        </Route>\n                        <Redirect from=\"*\" to=\"/fifteens\"></Redirect>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}
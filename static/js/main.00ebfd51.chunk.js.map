{"version":3,"sources":["fifteens/Fifteens.module.scss","fifteens/dashboard/Dashboard.module.scss","fifteens/dashboard/cell/Cell.module.scss","fifteens/moveCounter/MovesCounter.module.scss","fifteens/newGameButton/NewGameButton.module.scss","fifteens/timer/Timer.module.scss","App.module.scss","fifteens/dashboard/cell/Cell.tsx","fifteens/dashboard/Dashboard.tsx","fifteens/moveCounter/MovesCounter.tsx","fifteens/newGameButton/NewGameButton.tsx","fifteens/timer/Timer.tsx","fifteens/Fifteens.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Cell","containerClassNames","styles","container","this","props","number","emplty","gridPosition","y","x","className","style","onMouseDown","e","onClick","React","Component","Dashboard","FINAL_STATE","createFinalState","cells","onCellClicked","bind","state","cellsState","createRandomCellsState","shouldStartNewGame","setState","onGameStarts","isGameProceeds","checkCompleteness","onGameStoped","collectCells","onDoneBlock","doneMessage","dashboardStyleClasses","dashboard","onDone","i","push","handleCellsState","clickedCellIndex","emptyCellIndex","length","clickedCell","emptyCell","prevX","prevY","nextX","nextY","isEmptyAround","slice","onCellMoved","cellsStateDonor","randomIndex","Math","floor","random","splice","j","MovesCounter","movesCount","NewGameButton","newGameButton","onNewGame","Timer","seconds","Fifteens","timerId","onGameStarted","countersContainer","movesCounter","timer","newGameButtonContainer","clearInterval","window","setInterval","App","path","from","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00ebfd51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Fifteens_container__1Pfgo\",\"countersContainer\":\"Fifteens_countersContainer__2r_os\",\"timer\":\"Fifteens_timer__3IhtC\",\"movesCounter\":\"Fifteens_movesCounter__3jqxA\",\"newGameButtonContainer\":\"Fifteens_newGameButtonContainer__1yAZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dashboard_container__VZJFm\",\"dashboard\":\"Dashboard_dashboard__3pmzt\",\"doneMessage\":\"Dashboard_doneMessage__1V7v9\",\"onDone\":\"Dashboard_onDone__1R-mN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cell_container__2Hlr7\",\"number\":\"Cell_number__3PmW_\",\"emplty\":\"Cell_emplty__34REJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovesCounter_container__2it--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newGameButton\":\"NewGameButton_newGameButton__Ic5XD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Timer_container__2Hvjs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\"};","import React, { CSSProperties } from 'react';\nimport styles from './Cell.module.scss';\n\nclass Cell extends React.Component<CellProps> {\n    public render(): JSX.Element {\n        const containerClassNames: string = `${styles.container} ${!this.props.number ? styles.emplty : ''}`;\n        const gridPosition: CSSProperties = {\n            'gridColumn': this.props.y,\n            'gridRow': this.props.x\n        };\n\n        return (\n            <div \n                className={containerClassNames}\n                style={gridPosition}\n                onMouseDown={(e) => this.props.onClick(this.props.number)}\n            >\n                <div className={styles.number}>{this.props.number}</div>\n            </div>\n        );\n    }\n}\n\ninterface CellProps {\n    number: number | null;\n    x: number;\n    y: number;\n    onClick: (number: number) => void;\n}\n\nexport default Cell;\n","import React from 'react';\nimport { CellState } from '../entities/CellState';\nimport Cell from './cell/Cell';\nimport styles from './Dashboard.module.scss';\n\nclass Dashboard extends React.Component<DashboardProps, DashboardState> {\n    private readonly FINAL_STATE: CellState[] = this.createFinalState();\n\n    private cells: JSX.Element[];\n\n    constructor(props: DashboardProps) {\n        super(props);\n\n        this.onCellClicked = this.onCellClicked.bind(this);\n\n        this.state = {\n            cellsState: this.createRandomCellsState()\n        }\n    }\n    \n    render(): JSX.Element {\n        if (this.props.shouldStartNewGame) {\n            this.setState({\n                cellsState: this.createRandomCellsState()\n            });\n            this.props.onGameStarts();\n        }\n\n        if (this.props.isGameProceeds && this.checkCompleteness()) {\n            this.props.onGameStoped();\n        }\n\n        this.cells = this.collectCells();\n\n        let onDoneBlock: JSX.Element = null;\n        if (!this.props.isGameProceeds) {\n            onDoneBlock = <div className={styles.doneMessage}>Done!</div>\n        }\n\n        const dashboardStyleClasses: string = `\n            ${styles.dashboard}\n            ${!this.props.isGameProceeds ? styles.onDone : ''}\n        `;\n\n        return (\n            <div className={styles.container}>\n                <div className={dashboardStyleClasses}>\n                    {this.cells}\n                </div>\n                {onDoneBlock}\n            </div>\n        );\n    }\n\n    private collectCells(): JSX.Element[] {\n        let cells: JSX.Element[] = [];\n\n        let number;\n        for (let i = 0; i < 16; i++) {\n            number = i + 1 < 16 ? i + 1 : null;\n            \n            cells.push(\n                <Cell \n                    number={number}\n                    x={this.state.cellsState[i].x}\n                    y={this.state.cellsState[i].y}\n                    onClick={this.onCellClicked}\n                    key={i}\n                />\n            )\n        }\n\n        return cells;\n    }\n\n    private onCellClicked(number: number): void {\n        if (!number || !this.props.isGameProceeds) return;\n\n        this.handleCellsState(number);\n    }\n\n    private handleCellsState(number: number): void {\n        const clickedCellIndex: number = number - 1;\n        const emptyCellIndex: number = this.cells.length - 1;\n\n        const clickedCell: JSX.Element = this.cells[clickedCellIndex];\n        const emptyCell: JSX.Element = this.cells[emptyCellIndex];\n\n        let prevX: number = clickedCell.props.x;\n        let prevY: number = clickedCell.props.y;\n        let nextX: number = emptyCell.props.x;\n        let nextY: number = emptyCell.props.y;\n\n        if (!this.isEmptyAround(prevX, prevY, nextX, nextY)) return;\n\n        let cellsState: CellState[] = this.state.cellsState.slice();\n\n        cellsState[clickedCellIndex].x = nextX;\n        cellsState[clickedCellIndex].y = nextY;\n        cellsState[emptyCellIndex].x = prevX;\n        cellsState[emptyCellIndex].y = prevY;\n\n        this.setState({cellsState});\n        this.props.onCellMoved();\n    }\n\n    private isEmptyAround(prevX: number, prevY: number, nextX: number, nextY: number): boolean {\n        if (prevX === nextX) {\n            if (prevY - 1 === nextY || prevY + 1 === nextY) return true;\n        }\n\n        if (prevY === nextY) {\n            if(prevX - 1 === nextX || prevX + 1 === nextX) return true;\n        }\n\n        return false;\n    }\n\n    private checkCompleteness(): boolean {\n        for (let i = 0; i < this.FINAL_STATE.length; i++) {\n            const x = this.state.cellsState[i].x;\n            const y = this.state.cellsState[i].y;\n\n            if (x !== this.FINAL_STATE[i].x || y !== this.FINAL_STATE[i].y) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private createRandomCellsState(): CellState[] {\n        const cellsStateDonor: CellState[] = this.createFinalState();\n        let cellsState: CellState[] = [];\n\n        for(let i = 0; i < this.FINAL_STATE.length; i++) {\n            const randomIndex: number = Math.floor(Math.random() * cellsStateDonor.length);\n\n            cellsState.push(cellsStateDonor[randomIndex]);\n            cellsStateDonor.splice(randomIndex, 1);\n        }\n\n        return cellsState;\n    }\n\n    private createFinalState(): CellState[] {\n        let cellsState: CellState[] = [];\n\n        for (let i = 1; i <= 4; i++) {\n            for (let j = 1; j <= 4; j++) {\n                cellsState.push({\n                    x: i,\n                    y: j\n                });\n            }\n        }\n\n        return cellsState;\n    }\n}\n\ninterface DashboardProps {\n    isGameProceeds: boolean;\n    shouldStartNewGame: boolean;\n    onGameStarts: () => void;\n    onGameStoped: () => void;\n    onCellMoved: () => void;\n}\n\ninterface DashboardState {\n    cellsState: CellState[];\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport styles from './MovesCounter.module.scss';\n\nclass MovesCounter extends React.Component<MovesCounterProps> {\n    render(): JSX.Element {\n        return (\n            <div className={styles.container}>\n                Moves: {this.props.movesCount}\n            </div>\n        );\n    }\n}\n\ninterface MovesCounterProps {\n    movesCount: number;\n}\n\nexport default MovesCounter;\n","import React from 'react';\nimport styles from './NewGameButton.module.scss';\n\nclass NewGameButton extends React.Component<NewGameButtonProps> {\n    render(): JSX.Element {\n        return (\n            <button className={styles.newGameButton} onClick={this.props.onNewGame}>\n                New game\n            </button>\n        );\n    }\n}\n\ninterface NewGameButtonProps {\n    onNewGame: () => void;\n}\n\nexport default NewGameButton;\n","import React from 'react';\nimport styles from './Timer.module.scss';\n\nclass Timer extends React.Component<TimerProps> {\n    render(): JSX.Element {\n        return (\n            <div className={styles.container}>\n                {this.props.seconds}s\n            </div>\n        );\n    }\n}\n\ninterface TimerProps {\n    seconds: number;\n}\n\nexport default Timer;\n","import React from 'react';\nimport Dashboard from './dashboard/Dashboard';\nimport styles from './Fifteens.module.scss';\nimport MovesCounter from './moveCounter/MovesCounter';\nimport NewGameButton from './newGameButton/NewGameButton';\nimport Timer from './timer/Timer';\n\nclass Fifteens extends React.Component<any, FifteensState> {\n    private timerId: number;\n\n    constructor(props: any) {\n        super(props);\n\n        this.onNewGame = this.onNewGame.bind(this);\n        this.onGameStarted = this.onGameStarted.bind(this);\n        this.onGameStoped = this.onGameStoped.bind(this);\n        this.onCellMoved = this.onCellMoved.bind(this);\n\n        this.state = {\n            shouldStartNewGame: true,\n            isGameProceeds: false,\n            seconds: 0,\n            movesCount: 0\n        }\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div className={styles.container}>\n                <div className={styles.countersContainer}>\n                    <div className={styles.movesCounter}>\n                        <MovesCounter movesCount={this.state.movesCount} />\n                    </div>\n                    <div className={styles.timer}>\n                        <Timer seconds={this.state.seconds}/>\n                    </div>\n                </div>\n                <Dashboard \n                    isGameProceeds={this.state.isGameProceeds}\n                    shouldStartNewGame={this.state.shouldStartNewGame}\n                    onGameStarts={this.onGameStarted}\n                    onGameStoped={this.onGameStoped}\n                    onCellMoved={this.onCellMoved}\n                />\n                <div className={styles.newGameButtonContainer}>\n                    <NewGameButton onNewGame={this.onNewGame} />\n                </div>\n            </div>\n        );\n    }\n\n    private onNewGame(): void {\n        this.setState({shouldStartNewGame: true});\n    }\n\n    private onGameStarted(): void {\n        this.setState({\n            isGameProceeds: true,\n            shouldStartNewGame: false,\n            seconds: 0,\n            movesCount: 0\n        });\n    }\n\n    private onGameStoped(): void {\n        this.setState({\n            isGameProceeds: false\n        });\n\n        clearInterval(this.timerId);\n    }\n\n    private onCellMoved(): void {\n        this.setState({\n            movesCount: this.state.movesCount + 1\n        });\n\n        if (this.state.isGameProceeds && this.state.seconds === 0 && !this.timerId) {\n            this.timerId = window.setInterval(() => {\n                this.setState({\n                    seconds: this.state.seconds + 1\n                })\n            }, 1000)\n        }\n    }\n}\n\ninterface FifteensState {\n    shouldStartNewGame: boolean;\n    isGameProceeds: boolean;\n    seconds: number;\n    movesCount: number;\n}\n\nexport default Fifteens;\n","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport Fifteens from './fifteens/Fifteens';\nimport styles from './App.module.scss';\n\nexport class App extends React.Component {\n    public render(): JSX.Element { \n        return (\n            <div className={styles.container}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route path=\"/fifteens\">\n                            <Fifteens/>\n                        </Route>\n                        <Redirect from=\"*\" to=\"/fifteens\"></Redirect>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}